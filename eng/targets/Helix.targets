<Project>

  <!-- Build the actual helix work items to send to helix queues -->
  <Target Name="CreateHelixPayload" Returns="@(HelixWorkItem)">
    <ItemGroup>
      <_TargetFrameworks Remove="@(_TargetFrameworks)" />
      <_TargetFrameworks Include="$(TargetFrameworks);$(TargetFramework)" />
    </ItemGroup>

    <MSBuild Projects="$(MSBuildProjectFullPath)"
             Targets="_CreateHelixPayloadInner"
             Properties="TargetFramework=%(_TargetFrameworks.Identity);">
      <Output TaskParameter="TargetOutputs" ItemName="HelixWorkItem" />
    </MSBuild>
  </Target>

  <Target Name="_CreateHelixPayloadInner" Condition="'$(CreateHelixPayload)' != 'false' AND '%(HelixProjectTargetQueue)' == '$(HelixTargetQueue)'" Returns="@(HelixWorkItem)">

    <MSBuild Project="$(MSBuildProjectFullPath)" Targets="Publish" RemoveProperties="HelixTargetQueue" />

    <ConvertToAbsolutePath Paths="$(PublishDir)">
      <Output TaskParameter="AbsolutePaths" PropertyName="PublishAbsoluteDir" />
    </ConvertToAbsolutePath>

    <ItemGroup>
      <HelixWorkItem Include="$(MSBuildProjectName)-$(TargetFramework)">
        <PayloadDirectory>$(PublishAbsoluteDir)</PayloadDirectory>
        <TestAssembly>$(TargetFileName)</TestAssembly>
        <Command Condition="$(IsWindowsHelixQueue)">runtests.cmd $(TargetFileName) $(NETCoreSdkVersion) $(MicrosoftNETCoreAppPackageVersion)</Command>
        <Command Condition="!$(IsWindowsHelixQueue)">./runtests.sh $(TargetFileName) $(NETCoreSdkVersion) $(MicrosoftNETCoreAppPackageVersion)</Command>
        <TestTimeout>00:30:00</TestTimeout>
      </HelixWorkItem>
    </ItemGroup>
  </Target>
</Project>
